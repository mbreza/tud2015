package service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import domain.Car;

public class CarManager {

	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	
	private String createTableSamochod = "CREATE TABLE Samochod(id_samochod bigint GENERATED BY DEFAULT AS IDENTITY, marka varchar(20),model varchar(20),kolor varchar(20),rok_produkcji int,Opis varchar(50))";	
	
	private PreparedStatement addSamochodStmt;
	private PreparedStatement deleteAllSamochodStmt;
	private PreparedStatement getAllSamochodStmt;
	private PreparedStatement updateSamochodStmt;
	private PreparedStatement deleteSamochodStmt;
	
	private Statement statement;
	
	public CarManager() {
		try {
			connection = DriverManager.getConnection(url);
			

		} catch (SQLException e) {
			e.printStackTrace();
		}



	try {
		connection = DriverManager.getConnection(url);
		statement = connection.createStatement();

		ResultSet rs = connection.getMetaData().getTables(null, null, null,
				null);
		boolean tableExists = false;
		while (rs.next()) {
			if ("Samochod".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
				tableExists = true;
				break;
			}
		}

		if (!tableExists)
			statement.executeUpdate(createTableSamochod);

		addSamochodStmt = connection
				.prepareStatement("INSERT INTO Samochod (marka, model, kolor, rok_produkcji, Opis) VALUES (?, ?, ?, ?, ?)");
		deleteAllSamochodStmt = connection
				.prepareStatement("DELETE FROM Samochod");
	getAllSamochodStmt = connection
				.prepareStatement("SELECT id_samochod, marka, model, kolor, rok_produkcji, Opis FROM Samochod");

	updateSamochodStmt = connection.prepareStatement("UPDATE Samochod SET marka = ?, model = ?, kolor = ?, rok_produkcji = ?, Opis =?  WHERE id_samochod = ?");
	
	deleteSamochodStmt = connection.prepareStatement("DELETE FROM Samochod WHERE id_samochod = ?");
	} catch (SQLException e) {
		e.printStackTrace();
	}
	
	
	}	
	 Connection getConnection() {
		return connection;
	}	
	
		void clearSamochod() {
			try {
				deleteAllSamochodStmt.executeUpdate();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}

		public int addSamochod(Car car) {
			int count = 0;
			try {
				//addSamochodStmt.setInt(1, car.getId_samochod());
				addSamochodStmt.setString(1, car.getModel());
				addSamochodStmt.setString(2, car.getMarka());
				addSamochodStmt.setString(3, car.getKolor());
				addSamochodStmt.setInt(4, car.getRok_produkcji());
				addSamochodStmt.setString(5, car.getOpis());
				count = addSamochodStmt.executeUpdate();

			} catch (SQLException e) {
				e.printStackTrace();
			}
			return count;
		}

		public List<Car> getAllSamochod() {
			List<Car> car = new ArrayList<Car>();

			try {
				ResultSet rs = getAllSamochodStmt.executeQuery();

				while (rs.next()) {
					Car p = new Car();
					p.setId_samochod(rs.getInt("id_samochod"));
					p.setMarka(rs.getString("Marka"));
					p.setModel(rs.getString("Model"));
					p.setKolor(rs.getString("Kolor"));
					p.setRok_produkcji(rs.getInt("Rok_produkcji"));
					p.setOpis(rs.getString("Opis"));
					car.add(p);
				}

			} catch (SQLException e) {
				e.printStackTrace();
			}
			return car;
		}
	 
		 public int updateCar(Car car)
		    {
		        int count = 0;
		        try
		        {
		        	updateSamochodStmt.setString(1, car.getMarka());
		        	updateSamochodStmt.setString(2, car.getModel());
		        	updateSamochodStmt.setString(3, car.getKolor());
		        	updateSamochodStmt.setInt(4, car.getRok_produkcji());
		        	updateSamochodStmt.setString(5, car.getOpis());
		        	updateSamochodStmt.setInt(6, car.getId_samochod());

		            count = updateSamochodStmt.executeUpdate();

		        }
		        catch (SQLException e)
		        {
		            e.printStackTrace();
		        }
		        return count;
		    }
		
		 
		    public int deleteSamochod(Car car)
		    {
		        int count = 0;
		        try
		        {
		            deleteSamochodStmt.setInt(1, car.getId_samochod());
		            count = deleteSamochodStmt.executeUpdate();
		        }
		        catch (SQLException e)
		        {
		            e.printStackTrace();
		        }

		        return count;
		    }
}
